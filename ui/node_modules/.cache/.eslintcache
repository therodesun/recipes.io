[{"/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/index.js":"1","/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/App.js":"2","/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/Routes.js":"3","/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/components/Navbar.js":"4","/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/history.js":"5","/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/TablePage/TablePage.js":"6","/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/Home/Home.js":"7","/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/ShoppingCart/ShoppingCart.js":"8","/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/RecipePage/RecipePage.js":"9","/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/AddRecipe/AddRecipe.js":"10","/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/Home/Search.js":"11","/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/Home/Carousel.js":"12","/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/TablePage/RecipeTable.js":"13","/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/RecipePage/IngredientsList.js":"14","/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/ShoppingCart/RecipeTable2.js":"15","/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/AddRecipe/Table.js":"16","/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/RecipePage/InstructionsList.js":"17","/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/AddRecipe/Form.js":"18","/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/AddRecipe/Form2.js":"19","/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/AddRecipe/Table2.js":"20","/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/RecipePage/EditRecipe.js":"21"},{"size":322,"mtime":1613162538016,"results":"22","hashOfConfig":"23"},{"size":255,"mtime":1613162538015,"results":"24","hashOfConfig":"23"},{"size":1051,"mtime":1615168670367,"results":"25","hashOfConfig":"23"},{"size":933,"mtime":1615168670371,"results":"26","hashOfConfig":"23"},{"size":84,"mtime":1613162538016,"results":"27","hashOfConfig":"23"},{"size":806,"mtime":1615168670370,"results":"28","hashOfConfig":"23"},{"size":408,"mtime":1615168670363,"results":"29","hashOfConfig":"23"},{"size":2203,"mtime":1615168670368,"results":"30","hashOfConfig":"23"},{"size":4172,"mtime":1615169591097,"results":"31","hashOfConfig":"23"},{"size":4026,"mtime":1615168670360,"results":"32","hashOfConfig":"23"},{"size":627,"mtime":1615168670364,"results":"33","hashOfConfig":"23"},{"size":2486,"mtime":1615168670362,"results":"34","hashOfConfig":"23"},{"size":1511,"mtime":1615168670369,"results":"35","hashOfConfig":"23"},{"size":711,"mtime":1615168670365,"results":"36","hashOfConfig":"23"},{"size":1548,"mtime":1615168670368,"results":"37","hashOfConfig":"23"},{"size":782,"mtime":1615168670361,"results":"38","hashOfConfig":"23"},{"size":696,"mtime":1615168670365,"results":"39","hashOfConfig":"23"},{"size":955,"mtime":1615168670360,"results":"40","hashOfConfig":"23"},{"size":722,"mtime":1615062974126,"results":"41","hashOfConfig":"23"},{"size":719,"mtime":1615168670362,"results":"42","hashOfConfig":"23"},{"size":5106,"mtime":1615168670364,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"twrqvl",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/index.js",[],["94","95"],"/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/App.js",[],"/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/Routes.js",[],"/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/components/Navbar.js",[],"/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/history.js",[],"/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/TablePage/TablePage.js",[],"/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/Home/Home.js",[],"/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/ShoppingCart/ShoppingCart.js",["96"],"import React, { Component } from \"react\";\nimport { Image } from 'react-bootstrap';\nimport './ShoppingCart.css';\nimport Table from './RecipeTable2';\nimport IngredientsList from '../RecipePage/IngredientsList'\nimport axios from \"axios\"\n\nexport default class ShoppingCart extends Component {\n  \n  // get my recipes list and ingredients list\n  componentDidMount() {\n    var recipes;\n    var ingredients;\n    axios.get('http://localhost:5000/myrecipes')\n      .then(res => {\n        recipes = res.data.recipes_list;\n        // responseRecipes prevents from rendering before recipe data is loaded\n        this.setState({recipes: recipes, responseRecipes: true});\n      })\n      .catch(function (error) {\n        //Not handling the error. Just logging into the console.\n        console.log(error);\n      });\n      \n    axios.get('http://localhost:5000/shopping')\n      .then(res => {\n        ingredients = res.data.ingredients;\n        // responseIngredients prevents from rendering before ingredient data is loaded\n        this.setState({ingredients: ingredients, responseIngredients: true});\n      })\n      .catch(function (error) {\n        //Not handling the error. Just logging into the console.\n        console.log(error);\n      });\n  }\n  \n  state = {\n    recipes:[],\n    ingredients:[],\n    responseRecipes:false,\n    responseIngredients:false\n  }\n  \n  render() {\n    // prevent premature loading\n    if (!(this.state.responseRecipes && this.state.responseIngredients)){\n      return <div>(   Loading...  )</div>\n    }\n    const {ingredients, recipes} = this.state;\n    console.log(this.state);\n    return (\n      <div className=\"ShoppingCart\">\n        <div className=\"lander\">\n          <span>\n            <h1 id=\"title\">Shopping Cart</h1>\n          </span>\n          <span>\n            <div id=\"ingredients2\">\n              <h3 id=\"ingr_title\">Ingredients</h3>\n              <IngredientsList recipeData={ingredients}/>\n            </div>\n            <div id=\"saved\">\n              <h3 id=\"saved_title\">Saved Recipes</h3>\n              <div id=\"tablediv\">\n                <Table recipeData= {recipes} />\n              </div>\n            </div>\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n","/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/RecipePage/RecipePage.js",["97","98"],"import React, { Component } from \"react\";\nimport { Button, Image } from 'react-bootstrap';\nimport './RecipePage.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClock } from '@fortawesome/free-solid-svg-icons';\nimport IngredientsList from './IngredientsList';\nimport InstructionsList from './InstructionsList';\nimport axios from \"axios\";\n\n\nexport default class RecipePage extends Component {\n  \n  // getting recipe data\n  componentDidMount() {\n      axios.get('http://localhost:5000/recipe')\n      .then(res => {\n        const recipe = res.data;\n        const ingredients = recipe.ingredients;\n        const name = recipe.name;\n        const steps = recipe.steps;\n        const time = recipe.time;\n        const imageURL = recipe.imageURL;\n        this.setState({ ingredients: ingredients, name: name, steps: steps, time: time, imageURL: imageURL, response: true });\n      })\n      .catch(function (error) {\n        //Not handling the error. Just logging into the console.\n        console.log(error);\n      });\n  }\n\n  state = {\n        ingredients: [],\n        steps: [],\n        name: \"\",\n        time: \"\",\n        imageURL: \"\",\n        response:false,\n  }\n\n  render() {\n    // prevent page from loading prematurely\n    if (!this.state.response){\n      return <div>(   Loading...  )</div>\n    }\n    const {ingredients, steps, name, time, imageURL} = this.state;\n\n    return (\n      <div className=\"RecipePage\">\n        <div className=\"lander\">\n          <span>\n            <h1 id=\"title\">{name}</h1>\n            <Button variant=\"btn btn-success\" id=\"shopping\" onClick={() => {sendIngredients(ingredients, this.state)}}>Add to Shopping Cart</Button>\n            <Button variant=\"btn btn-success\" id=\"editBtn\" onClick={() => {sendName(name)}}>Edit Recipe</Button>\n            <Button variant=\"btn btn-success\" id=\"deleteBtn\" onClick={() => {deleteRecipe(name)}}>Delete Recipe</Button>\n          </span>\n          <span>\n            <div id=\"ingredients\">\n              <h3 id=\"ingr_title\">Ingredients</h3>\n              <em id=\"timeamt\">{time}</em>\n              <FontAwesomeIcon icon={faClock} id=\"timeicon\"/>\n              <IngredientsList recipeData={ingredients}/>\n            </div>\n            <div id=\"right\">\n              <img src={imageURL} id=\"image\"></img>\n            </div>\n          </span>\n          <div id=\"instructions\">\n            <h3 id=\"instr_title\">Instructions</h3>\n              <InstructionsList recipeData={steps}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// shopping cart function\nfunction sendIngredients(ingredients, recipe) {\n    // add to user ingredient list\n    axios.post('http://localhost:5000/shopping', {\"ingredients\":ingredients})\n        .then(res => {\n          console.log(\"success\");\n        })\n        .catch(function (error) {\n          //Not handling the error. Just logging into the console.\n          console.log(error);\n        });\n       \n    // add to user recipe list\n    axios.post('http://localhost:5000/myrecipes', recipe)\n        .then(res => {\n          console.log(\"success\");\n          window.location.href = \"http://localhost:3000/ShoppingCart\";\n        })\n        .catch(function (error) {\n          //Not handling the error. Just logging into the console.\n          console.log(error);\n        });  \n}\n\n// load recipe into cache for edit recipe\nfunction sendName(name) {\n   const nameURL = encodeURIComponent(name);\n   axios.get('http://localhost:5000/recipes/' + nameURL)\n       .then(res => {\n         console.log(\"success\");\n         window.location.href = \"http://localhost:3000/EditRecipe\";\n       })\n       .catch(function (error) {\n         //Not handling the error. Just logging into the console.\n         console.log(error);\n       });\n}\n\nfunction deleteRecipe(name) {\n  const nameURL = encodeURIComponent(name);\n   axios.delete('http://localhost:5000/recipes/' + nameURL)\n       .then(res => {\n         console.log(\"success\");\n         window.location.href = \"http://localhost:3000/RecipeTable\";\n       })\n       .catch(function (error) {\n         //Not handling the error. Just logging into the console.\n         console.log(error);\n       });\n}\n","/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/AddRecipe/AddRecipe.js",[],"/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/Home/Search.js",[],"/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/Home/Carousel.js",["99","100","101"],"import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport history from './../history';\nimport axios from 'axios'\n\n\n\nfunction sendName(name) {\n    const nameURL = encodeURIComponent(name);\n    axios.get('http://localhost:5000/recipes/' + nameURL)\n        .then(res => {\n          console.log(\"success\");\n          window.location.href = \"http://localhost:3000/RecipePage\";\n        })\n        .catch(function (error) {\n          //Not handling the error. Just logging into the console.\n          console.log(error);\n        });\n}\n\nclass Carousel extends Component {\n    state = {\n        recipes: [],\n        response:false\n    }\n     componentDidMount() {\n        axios.get('http://localhost:5000/recipes')\n         .then(res => {\n           const recipes = res.data.recipes_list;\n           this.setState({ recipes: recipes, response: true });\n         })\n         .catch(function (error) {console.log(error);}\n         );\n     }\n\n    render() { \n        if (!(this.state.response)){\n            return <div id=\"loadingbar\">(   Loading...  )</div>\n        }\n        const {recipes} = this.state;\n        // get two random indices\n        var rand1 = Math.floor(Math.random() * (recipes.length));\n        var rand2 = Math.floor(Math.random() * (recipes.length));\n        if (rand1 == rand2) {\n            // prevent duplicate index\n            if (rand1 + 1 < recipes.length) {\n                rand1 = rand1 + 1;\n            } else if (rand1 - 1 >= 0) {\n                rand1 = rand1 - 1;\n            }\n        }\n        return ( \n            <div>\n                <h2 id = \"recommend\">\n                    Recommended Recipes\n                </h2>\n                <Button id=\"carousel1\" variant=\"btn btn-success\" onClick={() => sendName(recipes[rand1].name)}>\n                    <div id = \"carousel\">\n                        <img class = \"class\" alt = 'https://c.ndtvimg.com/2020-01/n7thfo2o_spaghetti_625x300_28_January_20.jpg' src = {recipes[rand1].imageURL} id=\"image\"></img>\n                    </div>\n                </Button>\n                <Button id=\"carousel2\" variant=\"btn btn-success\" onClick={() => sendName(recipes[rand2].name)}>\n                    <div id = \"carousel\">\n                        <img class = \"class\" alt = 'https://static.toiimg.com/photo/53110049.cms' src = {recipes[rand2].imageURL} id=\"image\"></img>\n                    </div>\n                </Button>\n            </div>\n         );\n    }\n}\n \nexport default Carousel;","/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/TablePage/RecipeTable.js",["102"],"import React, { Component } from 'react'\nimport './index.css'\nimport axios from 'axios'\n\nconst TableHeader = () => {\n   return (\n      <thead>\n         <tr>\n            <th>Image</th>\n            <th>Recipe Name</th>\n            <th>Time to Make</th>\n         </tr>\n      </thead>\n   )\n}\n\nconst TableBody = props => {\n   const rows = props.recipeData.map((row, index) => {\n      return (\n         <tr key = {index} id=\"clickable\" onClick={() => sendName(row.name)}>\n            <td><img src = {row.imageURL} class=\"table\"></img></td>\n            <td>{row.name}</td>\n            <td>{row.time}</td>\n         </tr>\n      )\n   })\n   return <tbody>{rows}</tbody>\n}\n\nfunction sendName(name) {\n   const nameURL = encodeURIComponent(name);\n   axios.get('http://localhost:5000/recipes/' + nameURL)\n       .then(res => {\n         console.log(\"success\");\n         window.location.href = \"http://localhost:3000/RecipePage\";\n       })\n       .catch(function (error) {\n         //Not handling the error. Just logging into the console.\n         console.log(error);\n       });\n}\n\nclass Table extends Component {\n   render() {\n      const { recipeData } = this.props // Using recipeData as variable name to pass through data from databases\n      return (\n         <table>\n            <TableHeader />\n            <TableBody recipeData = {recipeData} />\n         </table>\n      )\n   }\n}\n\nexport default Table\n\n// Put in display page\n// return (\n//  <div className=\"container\">\n//    <Table recipeData={recipes} />\n//  </div>\n//)\n","/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/RecipePage/IngredientsList.js",[],"/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/ShoppingCart/RecipeTable2.js",["103"],"import React, { Component } from 'react'\nimport axios from 'axios'\n\nconst TableHeader = () => {\n   return (\n      <thead>\n         <tr>\n            <th>Image</th>\n            <th>Recipe Name</th>\n            <th>Time to Make</th>\n         </tr>\n      </thead>\n   )\n}\n\nconst TableBody = props => {\n   const rows = props.recipeData.map((row, index) => {\n      return (\n         <tr key = {index} id=\"clickable\" onClick={() => sendName(row.name)}>\n            <td><img src = {row.imageURL} class=\"table\"></img></td>\n            <td>{row.name}</td>\n            <td>{row.time}</td>\n         </tr>\n      )\n   })\n   return <tbody>{rows}</tbody>\n}\n\nfunction sendName(name) {\n   const nameURL = encodeURIComponent(name);\n   axios.get('http://localhost:5000/recipes/' + nameURL)\n       .then(res => {\n         console.log(\"success\");\n         window.location.href = \"http://localhost:3000/RecipePage\";\n       })\n       .catch(function (error) {\n         //Not handling the error. Just logging into the console.\n         console.log(error);\n       });\n}\n\nclass Table extends Component {\n   render() {\n      // Should temporarily be a fixed list on front end\n      const { recipeData } = this.props // Using recipeData as variable name to pass through data from databases\n\n      return (\n         <table>\n            <TableHeader />\n            <TableBody recipeData = {recipeData} />\n         </table>\n      )\n   }\n}\n\nexport default Table\n\n// Put in display page\n// return (\n//  <div className=\"container\">\n//    <Table recipeData={recipes} />\n//  </div>\n//)\n","/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/AddRecipe/Table.js",["104"],"import React, { Component } from 'react'\n\nconst TableHeader = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Ingredient</th>\n        <th>Amount</th>\n      </tr>\n    </thead>\n  )\n}\n\n// fill out with ingredient data\nconst TableBody = props => {\n  const rows = props.ingredientData.map((row, index) => {\n    return (\n      <tr key={index}>\n        <td>{row.name}</td>\n        <td>{row.quantity}</td>\n        <td>\n          <button onClick={() => props.remove(row, index)}>Delete</button>\n        </td>\n      </tr>)\n  })\n\n  return <tbody>{rows}</tbody>\n}\n\nconst Table = props => {\n  const { ingredientData, remove } = props\n\n  return (\n    <table>\n      <TableHeader />\n      <TableBody ingredientData={ingredientData} remove={remove} />\n    </table>\n  )\n}\n\nexport default Table\n","/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/RecipePage/InstructionsList.js",[],"/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/AddRecipe/Form.js",[],"/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/AddRecipe/Form2.js",[],"/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/AddRecipe/Table2.js",["105"],"import React, { Component } from 'react'\n\nconst TableHeader = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Step</th>\n      </tr>\n    </thead>\n  )\n}\n\n// fill out with instruction data\nconst TableBody = props => {\n  const rows = props.instructionData.map((row, index) => {\n    return (\n      <tr key={index}>\n        <td>{row}</td>\n        <td>\n          <button onClick={() => props.remove(row, index)}>Delete</button>\n        </td>\n      </tr>)\n  })\n  return <tbody>{rows}</tbody>\n}\n\nconst Table2 = props => {\n  const { instructionData, remove } = props\n  return (\n    <table>\n      <TableHeader />\n      <TableBody instructionData={instructionData} remove={remove} />\n    </table>\n  )\n}\n\nexport default Table2","/Users/jakenoe/Documents/GitHub/recipes.io/ui/src/RecipePage/EditRecipe.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":15},{"ruleId":"110","severity":1,"message":"111","line":2,"column":18,"nodeType":"112","messageId":"113","endLine":2,"endColumn":23},{"ruleId":"114","severity":1,"message":"115","line":64,"column":15,"nodeType":"116","endLine":64,"endColumn":46},{"ruleId":"110","severity":1,"message":"117","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":15},{"ruleId":"118","severity":1,"message":"119","line":44,"column":19,"nodeType":"120","messageId":"121","endLine":44,"endColumn":21},{"ruleId":"122","severity":1,"message":"123","line":64,"column":25,"nodeType":"116","endLine":64,"endColumn":142},{"ruleId":"114","severity":1,"message":"115","line":21,"column":17,"nodeType":"116","endLine":21,"endColumn":57},{"ruleId":"114","severity":1,"message":"115","line":20,"column":17,"nodeType":"116","endLine":20,"endColumn":57},{"ruleId":"110","severity":1,"message":"124","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":26},{"ruleId":"110","severity":1,"message":"124","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":26},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'history' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]